/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLogoutImport } from './routes/_auth/logout'
import { Route as AuthLoginImport } from './routes/_auth/login'

// Create Virtual Routes

const AppIndexLazyImport = createFileRoute('/_app/')()
const AppCashLazyImport = createFileRoute('/_app/cash')()

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexLazyRoute = AppIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any).lazy(() => import('./routes/_app/index.lazy').then((d) => d.Route))

const AppCashLazyRoute = AppCashLazyImport.update({
  id: '/cash',
  path: '/cash',
  getParentRoute: () => AppRouteRoute,
} as any).lazy(() => import('./routes/_app/cash.lazy').then((d) => d.Route))

const AuthSignupRoute = AuthSignupImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  id: '/_auth/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/_app/cash': {
      id: '/_app/cash'
      path: '/cash'
      fullPath: '/cash'
      preLoaderRoute: typeof AppCashLazyImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexLazyImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppCashLazyRoute: typeof AppCashLazyRoute
  AppIndexLazyRoute: typeof AppIndexLazyRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppCashLazyRoute: AppCashLazyRoute,
  AppIndexLazyRoute: AppIndexLazyRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/logout': typeof AuthLogoutRoute
  '/signup': typeof AuthSignupRoute
  '/cash': typeof AppCashLazyRoute
  '/': typeof AppIndexLazyRoute
}

export interface FileRoutesByTo {
  '/login': typeof AuthLoginRoute
  '/logout': typeof AuthLogoutRoute
  '/signup': typeof AuthSignupRoute
  '/cash': typeof AppCashLazyRoute
  '/': typeof AppIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/logout': typeof AuthLogoutRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_app/cash': typeof AppCashLazyRoute
  '/_app/': typeof AppIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/login' | '/logout' | '/signup' | '/cash' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/logout' | '/signup' | '/cash' | '/'
  id:
    | '__root__'
    | '/_app'
    | '/_auth/login'
    | '/_auth/logout'
    | '/_auth/signup'
    | '/_app/cash'
    | '/_app/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthSignupRoute: AuthSignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_auth/login",
        "/_auth/logout",
        "/_auth/signup"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/cash",
        "/_app/"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_auth/logout": {
      "filePath": "_auth/logout.tsx"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx"
    },
    "/_app/cash": {
      "filePath": "_app/cash.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.lazy.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
